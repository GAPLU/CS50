sort1 uses: Bubble sort

How do you know?: It's the slowest algorithm for random number arrays, but it's the fastest way to sort already sorted array,
that means that it has the smallest bottom boundary, which leads us to n, therefore its bubble

sort2 uses: Merge sort

How do you know?: it's the fastest sorting algorithm for both random and reversed arrays, that means that it has the smallest upper boundary
it's also a little bit slower, than sort1(bubble) in a reversed array, that also proves that it's merge sort, while (n * log n) is a bigger,
but not dramatically than (n)

sort3 uses: Selection sort

How do you know?: Even though it was a little faster than sort1(bubble) in random and reversed arrays, it had the worst result in the sorted array,
which means that it has drastically varying lower boundary in comparasment to sort1 and sort2, which leads us to the selections' lower boundary of (n*n)